org: joshsdoman
app: am-i-legitimate
service: SecondDegree
frameworkVersion: '2 || 3'
useDotenv: true

plugins:
  - serverless-python-requirements


custom:
  pythonRequirements:
    dockerizePip: true
  # Set the DynamoDB Table Names here:
  followersTableName: CachedFollowers
  followingTableName: CachedFollowing
  # Set the S3 Bucket Names here:
  followersBucket: cached-followers
  followingBucket: cached-following
  # Cache duration (in days)
  cacheDuration: 2


provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  environment:
    BEARER_TOKEN: ${env:BEARER_TOKEN}
    FOLLOWERS_TABLE_NAME: ${self:custom.followersTableName}
    FOLLOWING_TABLE_NAME: ${self:custom.followingTableName}
    FOLLOWERS_BUCKET: ${self:custom.followersBucket}
    FOLLOWING_BUCKET: ${self:custom.followingBucket}
    CACHE_DURATION: ${self:custom.cacheDuration}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: "arn:aws:s3:::*"
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
      Resource:
        - arn:aws:dynamodb:us-east-1:153465547057:table/${self:custom.followersTableName}
        - arn:aws:dynamodb:us-east-1:153465547057:table/${self:custom.followingTableName}


# Create our resources with separate CloudFormation templates
resources:
  # DynamoDB
  - ${file(resources/dynamodb.yml)}
  # S3
  - ${file(resources/s3-buckets.yml)}


functions:
  follows-my-followers:
    handler: handler.followsMyFollowers
    timeout: 30
    events:
      - http:
          path: /
          method: post
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
    package:
      patterns:
        - functions
  follows-my-followers-test:
    handler: handler.followsMyFollowersTest
    events:
      - http:
          path: /test
          method: get
    package:
      patterns:
        - functions
